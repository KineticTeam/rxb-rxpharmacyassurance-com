/* Source: enfold-plus-lotties/src/js/ */
!function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=2)}([,,function(t,e,n){t.exports=n(3)},function(t,e){function n(t){return function(t){if(Array.isArray(t))return r(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(!t)return;if("string"==typeof t)return r(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);"Object"===n&&t.constructor&&(n=t.constructor.name);if("Map"===n||"Set"===n)return Array.from(t);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r(t,e)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function o(t){return n(lottie.getRegisteredAnimations()).filter((function(e){return e.wrapper==t}))[0]}function i(t){t.classList.contains("ep-lottie-loaded")||bodymovin.loadAnimation({wrapper:t,animType:t.dataset.animtype,loop:"true"==t.dataset.loop,autoplay:"false"!=t.dataset.autoplay,prerender:!0,path:t.dataset.json}).addEventListener("DOMLoaded",(function(){t.classList.add("ep-lottie-loaded")}))}!function(){var t=document.querySelectorAll(".ep-lottie-animation .ep-lottie-animation-inner");if(window.IntersectionObserver){var e=new IntersectionObserver((function(t,e){t.forEach((function(t,e){!function(t){var e=t.target;t.isIntersecting?(i(e),o(e).play()):e.classList.contains("ep-lottie-loaded")&&o(e).pause()}(t)}))}),{root:null,threshold:0});n(t).forEach((function(t){e.observe(t)}))}else window.requestAnimationFrame((function(){n(t).forEach((function(t){return i(t)}))}))}()}]);
!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){e.exports=n(1)},function(e,t){function n(e){return function(e){if(Array.isArray(e))return r(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function o(e,t){var r=e[t],o=r.element,i=o.dataset.json,a=o.dataset.animtype;o.dataset.fallbackimage;r.loaded?function(e){return n(lottie.getRegisteredAnimations()).filter((function(t){return t.wrapper==e}))[0]}(o).goToAndPlay(0):bodymovin.loadAnimation({wrapper:o,animType:a,loop:!1,autoplay:!0,prerender:!0,path:i}).addEventListener("DOMLoaded",(function(){o.classList.add("ep-lottie-loaded"),r.loaded=!0}))}function i(e){var t=e.querySelector(".ep-flickity-slider"),r=Flickity.data(t),i=e.querySelectorAll(".ep-lottie-animation-inner"),a=[];n(i).forEach((function(e){a.push({loaded:!1,element:e})})),o(a,0),r.on("change",(function(e){o(a,e)}))}!function(){var e=document.querySelectorAll(".ep-lottie-slider-wrapper");if(window.IntersectionObserver){var t=new IntersectionObserver((function(e,t){e.forEach((function(e,n){e.isIntersecting&&(i(e.target),t.unobserve(e.target))}))}),{root:null,threshold:0});n(e).forEach((function(e){t.observe(e)}))}else window.requestAnimationFrame((function(){n(e).forEach((function(e){return i(e)}))}))}()}]);